<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Volatility - Step 3 - Review Network Artifacts</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>VOLATILITY_LOCATION</name>
          <description>Specify the location of the memory image to analyse.</description>
          <defaultValue>file:///cases/sift408pc-memory.img</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VOLATILITY_PROFILE</name>
          <description>Specify the profile of the memory image to analyse.</description>
          <defaultValue>Win7SP1x86</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OUTPUT_LOCATION</name>
          <description>Specify the location of the memory image to analyse.</description>
          <defaultValue>/cases/sift408pc-memory.img_output_dir</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>if  [[ $VOLATILITY_PROFILE =~ "WinXP" ]] ; then vol.py connections &amp;&amp; vol.py connscan &amp;&amp; vol.py sockets &amp;&amp; vol.py sockscan; elif [[ $VOLATILITY_PROFILE =~ "Win2K3" ]] ; then vol.py connections &amp;&amp; vol.py connscan &amp;&amp; vol.py sockets &amp;&amp; vol.py sockscan; elif [[ $VOLATILITY_PROFILE =~ "Win" ]] ; then vol.py netscan; else echo "Unsupported Memory Image Profile to Review Network Artifacts"; fi</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
